{"version":3,"sources":["hooks/useFetch.js","assets/resources/states_names.js","hooks/useDataByCountry.js","hooks/useFilter.js","layout/Header/Header.jsx","components/search-bar/SearchBar.jsx","components/summary/Summary.jsx","layout/Modal/Modal.jsx","hooks/useModal.js","components/card-image/CardImage.jsx","components/card-address/CardAddress.jsx","components/card-bio/CardBio.jsx","components/chip/Chip.jsx","components/chips-list/ChipsList.jsx","components/card-specialties/CardSpecialties.jsx","components/card-buttons/CardButtons.jsx","components/contact-form/ContactForm.jsx","components/contact-message/ContactMessage.jsx","components/results-card/ResultsCard.jsx","components/results-list/ResultsList.jsx","components/message/Message.jsx","App.js","index.js"],"names":["useFetch","url","useState","data","setData","useEffect","a","axios","get","headers","response","getData","states_names","states_names_reverse","useDataByCountry","dataByCountry","setDataByCountry","hasListings","row","Object","prototype","hasOwnProperty","call","hasStates","country","findAltStateName","state","list","listings","keys","l_country","toLowerCase","l_state","l_state_alt","console","log","formatData","useFilter","value","results","setResults","key","key_alt","findKeyAlt","hasResults","findIds","map","item","filterData","Header","className","src","process","alt","SearchBar","handleSubmit","setValue","onSubmit","event","type","placeholder","onChange","e","target","icon","faSearch","size","Summary","resultsCount","Modal","React","memo","children","domElement","document","querySelector","ReactDOM","createPortal","useModal","isOpen","setIsOpen","hide","show","RenderModal","onClick","stopPropagation","CardImage","faCamera","CardAddress","address","city","zipCode","CardBio","firstName","lastName","clinicName","biography","isOpened","initialStyle","minHeight","overflow","Chip","title","ChipsList","i","CardSpecialties","topSpecialties","otherSpecialties","languages","CardButtons","handleClick","ContactForm","preventDefault","ContactMessage","Card","ResultsList","Message","App","length","render","StrictMode"],"mappings":"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","file":"static/js/main.ff1f74aa.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useFetch = (url) => {\n    const [data, setData] = useState({});\n\n    useEffect(() => {\n        const getData = async () => {\n            const response = await axios.get(url, {\n                headers : { \n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n                }\n            });\n            setData(response.data);\n        };\n        getData();\n    }, [url]);\n\n    return { data };\n};\n\nexport default useFetch;","export const states_names = {\n    \"al\": \"alabama\",\n    \"ak\": \"alaska\",\n    \"as\": \"american samoa\",\n    \"az\": \"arizona\",\n    \"ar\": \"arkansas\",\n    \"ca\": \"california\",\n    \"co\": \"colorado\",\n    \"ct\": \"connecticut\",\n    \"de\": \"delaware\",\n    \"dc\": \"district of columbia\",\n    \"fm\": \"federated states of micronesia\",\n    \"fl\": \"florida\",\n    \"ga\": \"georgia\",\n    \"gu\": \"guam\",\n    \"hi\": \"hawaii\",\n    \"id\": \"idaho\",\n    \"il\": \"illinois\",\n    \"in\": \"indiana\",\n    \"ia\": \"iowa\",\n    \"ks\": \"kansas\",\n    \"ky\": \"kentucky\",\n    \"la\": \"louisiana\",\n    \"me\": \"maine\",\n    \"mh\": \"marshall islands\",\n    \"md\": \"maryland\",\n    \"ma\": \"massachusetts\",\n    \"mi\": \"michigan\",\n    \"mn\": \"minnesota\",\n    \"ms\": \"mississippi\",\n    \"mo\": \"missouri\",\n    \"mt\": \"montana\",\n    \"ne\": \"nebraska\",\n    \"nv\": \"nevada\",\n    \"nh\": \"new hampshire\",\n    \"nj\": \"new jersey\",\n    \"nm\": \"new mexico\",\n    \"ny\": \"new york\",\n    \"nc\": \"north carolina\",\n    \"nd\": \"north dakota\",\n    \"mp\": \"northern mariana islands\",\n    \"oh\": \"ohio\",\n    \"ok\": \"oklahoma\",\n    \"or\": \"oregon\",\n    \"pw\": \"palau\",\n    \"pa\": \"pennsylvania\",\n    \"pr\": \"puerto rico\",\n    \"ri\": \"rhode island\",\n    \"sc\": \"south carolina\",\n    \"sd\": \"south dakota\",\n    \"tn\": \"tennessee\",\n    \"tx\": \"texas\",\n    \"ut\": \"utah\",\n    \"vt\": \"vermont\",\n    \"vi\": \"virgin islands\",\n    \"va\": \"virginia\",\n    \"wa\": \"washington\",\n    \"wv\": \"west virginia\",\n    \"wi\": \"wisconsin\",\n    \"wy\": \"wyoming\",\n    \"ab\": \"alberta\",\n    \"bc\": \"british columbia\",\n    \"mb\": \"manitoba\",\n    \"nb\": \"new brunswick\",\n    \"nl\": \"newfoundland and labrador\",\n    \"ns\": \"nova scotia\",\n    \"nt\": \"northwest territories\",\n    \"nu\": \"nunavut\",\n    \"on\": \"ontario\",\n    \"pe\": \"prince edward island\",\n    \"qc\": \"québec\",\n    \"sk\": \"saskatchewan\",\n    \"yt\": \"yukon\"\n};\n\n\nexport const states_names_reverse = {\n    \"alabama\": \"al\",\n    \"alaska\": \"ak\",\n    \"american samoa\": \"as\",\n    \"arizona\": \"az\",\n    \"arkansas\": \"ar\",\n    \"california\": \"ca\",\n    \"colorado\": \"co\",\n    \"connecticut\": \"ct\",\n    \"delaware\": \"de\",\n    \"district of columbia\": \"dc\",\n    \"federated states of micronesia\": \"fm\",\n    \"florida\": \"fl\",\n    \"georgia\": \"ga\",\n    \"guam\": \"gu\",\n    \"hawaii\": \"hi\",\n    \"idaho\": \"id\",\n    \"illinois\": \"il\",\n    \"indiana\": \"in\",\n    \"iowa\": \"ia\",\n    \"kansas\": \"ks\",\n    \"kentucky\": \"ky\",\n    \"louisiana\": \"la\",\n    \"maine\": \"me\",\n    \"marshall islands\": \"mh\",\n    \"maryland\": \"md\",\n    \"massachusetts\": \"ma\",\n    \"michigan\": \"mi\",\n    \"minnesota\": \"mn\",\n    \"mississippi\": \"ms\",\n    \"missouri\": \"mo\",\n    \"montana\": \"mt\",\n    \"nebraska\": \"ne\",\n    \"nevada\": \"nv\",\n    \"new hampshire\": \"nh\",\n    \"new jersey\": \"nj\",\n    \"new mexico\": \"nm\",\n    \"new york\": \"ny\",\n    \"north carolina\": \"nc\",\n    \"north dakota\": \"nd\",\n    \"northern mariana islands\": \"mp\",\n    \"ohio\": \"oh\",\n    \"oklahoma\": \"ok\",\n    \"oregon\": \"or\",\n    \"palau\": \"pw\",\n    \"pennsylvania\": \"pa\",\n    \"puerto rico\": \"pr\",\n    \"rhode island\": \"ri\",\n    \"south carolina\": \"sc\",\n    \"south dakota\": \"sd\",\n    \"tennessee\": \"tn\",\n    \"texas\": \"tx\",\n    \"utah\": \"ut\",\n    \"vermont\": \"vt\",\n    \"virgin islands\": \"vi\",\n    \"virginia\": \"va\",\n    \"washington\": \"wa\",\n    \"west virginia\": \"wv\",\n    \"wisconsin\": \"wi\",\n    \"wyoming\": \"wy\",\n    \"alberta\": \"ab\",\n    \"british columbia\": \"bc\",\n    \"manitoba\": \"mb\",\n    \"new brunswick\": \"nb\",\n    \"newfoundland and labrador\": \"nl\",\n    \"nova scotia\": \"ns\",\n    \"northwest territories\": \"nt\",\n    \"nunavut\": \"nu\",\n    \"ontario\": \"on\",\n    \"prince edward island\": \"pe\",\n    \"québec\": \"qc\",\n    \"saskatchewan\": \"sk\",\n    \"yukon\": \"yt\"\n    }\n\n","import { states_names, states_names_reverse } from '../assets/resources/states_names';\nimport { useState, useEffect } from 'react';\n\n// builds a new data dictionary with country or state name as a key and an array of listings ids as a value\nconst useDataByCountry = (data) => {\n    const [dataByCountry, setDataByCountry] = useState({});\n  \n    useEffect(() => {\n\n        // check for irrelevant/empty rows\n        const hasListings = (data, row) => Object.prototype.hasOwnProperty.call(data, row) && data[row].hasOwnProperty(\"listings\");\n\n        // check if we should use a country or a state name as a key \n        const hasStates = (country) => country === \"United States\" || country === \"Canada\";\n\n        // find alternative state name in array uf US and Canada state names\n        const findAltStateName = (state) => states_names[state] ? states_names[state] : states_names_reverse[state];\n\n        const formatData = () => {\n            // using regular (not state) variable since the state should only update when the whole new list is finished\n            let list = {};\n\n            for (let row in data) {\n                if (hasListings(data, row)) {\n\n                    // extract country and state names form listing \n                    const { country, state } = data[row].listings[Object.keys(data[row].listings)[0]];\n                    \n                    const l_country = country.toLowerCase();\n                    const l_state = hasStates(country) ? state.toLowerCase() : \"\";\n                    const l_state_alt = hasStates(country) ? findAltStateName(state.toLowerCase()) : \"\";\n                    \n                    // push current row id into list\n                    if (list.hasOwnProperty(l_country)) {\n                        // the country already exists\n                        list[l_country] = [...list[l_country], row];\n                    }\n\n                    if (!list.hasOwnProperty(l_country)) {\n                        // new country\n                        list[l_country] = [row];\n                    }\n\n                    if (list.hasOwnProperty(l_state)) {\n                        // the state name already exists\n                        list[l_state] = [...list[l_state], row];\n                    }\n\n                    else if (list.hasOwnProperty(l_state_alt)) {\n                        // the alt state name already exists\n                        list[l_state_alt] = [...list[l_state_alt], row];\n                    }\n\n                    else if (l_state !== \"\") {\n                        // new state name\n                        list[l_state] = [row];\n                    }\n                    \n                }\n            }\n            console.log(list)\n            setDataByCountry(list);\n        };\n        formatData();\n    }, [data]);\n    return { dataByCountry };\n};\n\nexport default useDataByCountry;\n\n         ","import { states_names, states_names_reverse } from '../assets/resources/states_names';\nimport { useState, useEffect } from 'react';\n\nconst useFilter = (data, dataByCountry, value) => {\n    const [results, setResults] = useState([]);\n\n    useEffect(() => {\n\n        // check if the value exists in the data\n        const hasResults = (key, key_alt) => dataByCountry.hasOwnProperty(key) || dataByCountry.hasOwnProperty(key_alt);\n        \n        // find alternative state name in array uf US and Canada state names\n        const findKeyAlt = (key) => {\n            if (states_names[key]) return states_names[key];\n            else if (states_names_reverse[key]) return states_names_reverse[key];\n            else return \"\";\n        }\n\n        // find an array of listings ids mapped to the searched value\n        const findIds = (key, key_alt) => dataByCountry[key] ? dataByCountry[key] : dataByCountry[key_alt];\n        \n        // build an array of listings to render as search results\n        const buildResults = (arr) => arr.map(item => data[item].listings[Object.keys(data[item].listings)[0]]);\n\n        const filterData = () => {\n\n            const key = value.toLowerCase();\n            const key_alt = findKeyAlt(key);\n\n            if (hasResults(key, key_alt)) {\n                setResults(buildResults(findIds(key, key_alt)));\n            } \n            else {\n                setResults([]);\n            }\n        };\n        filterData();\n    }, [ data, dataByCountry, value ]);\n\n    return { results };\n};\n\nexport default useFilter;","import React from 'react';\nimport './Header.scss';\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <img \n                src={process.env.PUBLIC_URL + '/images/logo.png'} \n                alt=\"Myndlift logo\" \n                className=\"header__logo\" />\n        </div>\n    );   \n}\n\nexport default Header;","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport './SearchBar.scss';\n\nconst SearchBar = ({ handleSubmit }) => {\n    const [ value, setValue ] = useState(\"\");\n\n    return (\n        <form \n            className=\"search_form\" \n            onSubmit={(event) => handleSubmit(event, value)}>\n            <div>\n                <input \n                    className=\"search_form__field\"\n                    type=\"text\" \n                    placeholder=\"Search by city, state, or country\"\n                    value={value} \n                    onChange={(e) => setValue(e.target.value)} />\n                <FontAwesomeIcon icon={faSearch} size=\"2x\" />\n            </div>\n            <input \n                className=\"search_form__button\"\n                type=\"submit\" \n                value={\"Search\"} />\n        </form>\n    );\n}\n\nexport default SearchBar;","import React from 'react';\nimport './Summary.scss';\n\nconst Summary = ({ value, resultsCount }) => {\n    return (\n        <div className=\"summary\">\n            {resultsCount > 0 ? `Showing ${resultsCount} results for “${value}“` : `No results for “${value}“`}\n        </div>\n        \n    );\n}\n\nexport default Summary;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.scss';\n\nconst Modal = React.memo(\n  ({ children }) => {\n    const domElement = document.querySelector('#modal-root');\n\n    if (!domElement) return null;\n\n    return ReactDOM.createPortal(\n      <div className=\"modal\">\n          {children}\n      </div>,\n      domElement\n    );\n  }\n)\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport Modal from '../layout/Modal/Modal';\n\nconst useModal = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const show = () => setIsOpen(true);\n  const hide = () => setIsOpen(false);\n\n  const RenderModal = ({ children }) => (\n    <>\n      {isOpen && (\n        <Modal>\n          <div className=\"modal__overlay\" onClick={hide}>\n            <div className=\"modal__msg\" onClick={(e) => e.stopPropagation()}>\n              {children}\n            </div>\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n\n  return {\n    show,\n    hide,\n    RenderModal,\n  }\n}\n\nexport default useModal;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCamera } from '@fortawesome/free-solid-svg-icons';\nimport './CardImage.scss';\n\nconst CardImage = () => {\n    return (\n        <div className=\"card_row__img\">\n            <FontAwesomeIcon icon={faCamera} size=\"8x\" />\n        </div>\n    );\n}\n\nexport default CardImage;","import React from 'react';\nimport './CardAddress.scss';\n\nconst CardAddress = ({address, city, state, zipCode, country}) => {\n    return (\n        <div className=\"card_row__address\">\n            {address}<br/>{`${city} ${state}`}<br/>{`${zipCode} ${country}`}\n        </div>\n    );\n}\n\nexport default CardAddress;","import React from 'react';\nimport { Collapse } from 'react-collapse';\nimport './CardBio.scss';\n\nconst CardBio = ({firstName, lastName, clinicName, isOpen, biography}) => {\n    return (\n        <div className=\"card_row__bio\">\n            <div className=\"bio_name\">{`${firstName} ${lastName}`}</div>\n            <div className=\"bio_clinic\">{clinicName}</div>\n            <Collapse isOpened={isOpen} initialStyle={{minHeight: 60, overflow: 'hidden'}}>\n                <div className=\"bio_text\">{biography}</div>\n            </Collapse>\n        </div>\n    );\n}\n\nexport default CardBio;","import React from 'react';\nimport './Chip.scss';\n\nconst Chip = ({ title }) => {\n    return (<div className=\"chip\">{title}</div>);\n}\n\nexport default Chip;","import React from 'react';\nimport Chip from '../chip/Chip';\nimport './ChipsList.scss';\n\nconst ChipsList = ({ list }) => {\n\n    return (\n        <div className=\"chips_list\">\n            {list.map((item, i) => <Chip key={`chip_${i}`} title={item} />)}\n        </div>\n    );\n}\n\nexport default ChipsList;","import React from 'react';\nimport { Collapse } from 'react-collapse';\nimport ChipsList from '../chips-list/ChipsList';\nimport './CardSpecialties.scss';\n\nconst CardSpecialties = ({isOpen, topSpecialties, otherSpecialties, languages}) => {\n    return (\n        <div className=\"card_row__specialties\">\n            <div>\n                <div className=\"title\">Specialties:</div>\n                <ChipsList list={topSpecialties} />\n            </div>\n            <Collapse isOpened={isOpen}>\n                <div className=\"title\">More Specialties:</div>\n                <ChipsList list={otherSpecialties} />\n            </Collapse>\n            <Collapse isOpened={isOpen}>\n                <div className=\"title\">Languages:</div>\n                <ChipsList list={languages} />\n            </Collapse>\n        </div>\n    );\n}\n\nexport default CardSpecialties;","import React from 'react';\nimport './CardButtons.scss';\n\nconst CardButtons = ({isOpen, handleClick}) => {\n    return (\n        <div className=\"card_row__buttons\">\n            <div>\n                <span>{isOpen ? \"Hide Profile\" : \"View Profile\"}</span>\n                <button onClick={handleClick}>Send Message</button>\n            </div>\n        </div>\n    );\n}\n\nexport default CardButtons;","import React from 'react';\nimport './ContactForm.scss';\n\nconst ContactForm = () => {\n    return (\n    <form className=\"contact_form\" onSubmit={e => e.preventDefault()}>\n        <input type=\"text\" placeholder=\"Your name\" />\n        <input type=\"text\" placeholder=\"Your email\" />\n        <input type=\"text\" placeholder=\"Your phone\" />\n        <textarea placeholder=\"Message (up to 200 words)\"></textarea>\n        <input type=\"submit\" value=\"Send Message\" />\n    </form>);\n    }\n\nexport default ContactForm;","import React from 'react';\nimport './ContactMessage.scss';\n\nconst ContactMessage = () => {\n    return (\n        <div className=\"contact_message\">\n            <p>Don’t be shy.</p>\n            <p>Our Myndlift providers are here to help you and are pleased to hear from you.</p>\n            <p>Feel free to ask what you want but keep it short, 200 words or less, this is just an initial contact.</p>\n            <p>Remember to double check your email and phone number.</p>\n        </div>\n    );\n}\n\nexport default ContactMessage;","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCamera } from '@fortawesome/free-solid-svg-icons';\nimport useModal from '../../hooks/useModal';\nimport CardImage from '../card-image/CardImage';\nimport CardAddress from '../card-address/CardAddress';\nimport CardBio from '../card-bio/CardBio';\nimport CardSpecialties from '../card-specialties/CardSpecialties';\nimport CardButtons from '../card-buttons/CardButtons';\nimport ContactForm from '../contact-form/ContactForm';\nimport ContactMessage from '../contact-message/ContactMessage';\nimport './ResultsCard.scss';\nimport './ResultsCardModal.scss';\n\nconst Card = ({ data }) => {\n\n    const [isOpen, setIsOpen] = useState(false); \n    const { show, RenderModal } = useModal();\n    const { \n        firstName, \n        lastName, \n        clinicName, \n        biography, \n        address, \n        city, \n        state, \n        zipCode, \n        country, \n        topSpecialties, \n        otherSpecialties, \n        languages \n    } = data;\n    \n\n    const toggleIsOpen = () => {\n        setIsOpen(isOpen => !isOpen);\n    }\n\n    return (\n        <>\n            <div className=\"card\" onClick={toggleIsOpen}>\n                <div className=\"card_row\">\n                    <CardImage />\n                    <CardBio \n                        firstName={firstName} \n                        lastName={lastName} \n                        clinicName={clinicName} \n                        isOpen={isOpen} \n                        biography={biography} />\n                    <CardAddress \n                        address={address} \n                        city={city} \n                        state={state} \n                        zipCode={zipCode} \n                        country={country} />\n                </div>\n                <div className=\"card_row\">\n                    <CardSpecialties \n                        isOpen={isOpen} \n                        topSpecialties={topSpecialties} \n                        otherSpecialties={otherSpecialties} \n                        languages={languages} />\n                    <CardButtons isOpen={isOpen} handleClick={() => show()} />\n                </div>\n            </div>\n            <RenderModal>\n                <div className=\"modal__title\">\n                    <FontAwesomeIcon icon={faCamera} size=\"4x\" />\n                    {`Send a message to ${firstName} ${lastName}`}\n                </div>\n                <div className=\"modal__body\">\n                    <ContactForm />\n                    <ContactMessage />\n                </div>\n            </RenderModal>\n        </>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport ResultsCard from '../results-card/ResultsCard';\nimport './ResultsList.scss';\n\nconst ResultsList = ({ results }) => {\n    return (\n        <div className=\"results_list\">\n            {results.map((item, i) => <ResultsCard key={`listing_${i}`} data={item} />)}\n        </div>\n    );   \n}\n\nexport default ResultsList;","import React from 'react';\nimport './Message.scss';\n\nconst Message = ({ value, resultsCount }) => {\n    return (\n        <div className=\"message\">\n            <div className=\"message__container\">\n                <div className=\"message__title\">\n                    <p>Don't see a provider near you? </p>\n                    <p>Not a problem.</p>\n                </div>\n                <div className=\"message__text\">\n                    That’s why we offer professional at-home training. Your kit will arrive in the mail and you will be matched with a professional neuro-coach to start training using the Myndlift app.\n                </div>\n                <button className=\"message__button\">Check Out The Remote Program</button>\n            </div>\n        </div>\n        \n    );\n}\n\nexport default Message;","import React, { useState } from 'react';\nimport useFetch from './hooks/useFetch';\nimport useDataByCountry from './hooks/useDataByCountry';\nimport useFilter from './hooks/useFilter';\nimport Header from './layout/Header/Header';\nimport SearchBar from './components/search-bar/SearchBar';\nimport Summary from './components/summary/Summary';\nimport ResultsList from './components/results-list/ResultsList';\nimport Message from './components/message/Message';\nimport './app.style.scss';\n\nconst App = () => {\n\n    const [value, setValue] = useState(\"\");\n    const { data } = useFetch(process.env.PUBLIC_URL + '/data.json');\n    const { dataByCountry } = useDataByCountry(data);\n    const { results } = useFilter(data, dataByCountry, value);\n\n    const handleSubmit = (event, value) => {\n        event.preventDefault();\n        setValue(value);\n    }\n\n    return(\n        <div className=\"app\">\n            <Header />\n            <h1>Nearby Myndlift Providers</h1>\n            <SearchBar handleSubmit={handleSubmit}/>\n            {value !== \"\" && <Summary value={value} resultsCount={results.length} />}\n            {results.length > 0 && <ResultsList results={results}/>}\n            {value !== \"\" && results.length === 0 && <Message />}\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './assets/sass/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root')\n);\n\n\n"],"sourceRoot":""}